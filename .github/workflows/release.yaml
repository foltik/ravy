name: Release
on:
  push:
    tags: ["v*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            bin: rust-workspace-bin
            artifact: rust-bin-linux-x86_64
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04-arm
            bin: rust-workspace-bin
            artifact: rust-bin-linux-aarch64
            target: aarch64-unknown-linux-gnu
          - os: macos-15
            bin: rust-workspace-bin
            artifact: rust-bin-apple-aarch64
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
      - run: cargo build -r --bin ${{ matrix.bin }} --target ${{ matrix.target }}
      - run: cp target/${{ matrix.target }}/release/${{ matrix.bin }} ${{ matrix.artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: bin
          merge-multiple: true
      - uses: softprops/action-gh-release@v2
        with:
          files: bin/*
          generate_release_notes: true

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo publish -p rust-workspace-lib --token ${{ secrets.CRATES_IO_TOKEN }}
      - run: cargo publish -p rust-workspace-bin --token ${{ secrets.CRATES_IO_TOKEN }}
